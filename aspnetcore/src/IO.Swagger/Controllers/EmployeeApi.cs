/*
 * Phoenix Payroll API
 *
 * design and build great web apis
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class EmployeeApiController : ControllerBase
    { 
        /// <summary>
        /// Use this to get a list of employee records
        /// </summary>
        /// <param name="status">status flag</param>
        /// <param name="session">session token</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/MzdyHrave/Phoenix/1.0.0/employee")]
        [ValidateModelState]
        [SwaggerOperation("EmploeeList")]
        [SwaggerResponse(statusCode: 200, type: typeof(Reply), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult EmploeeList([FromQuery]string status, [FromQuery]string session)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Reply));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"metadata\" : [ {\n    \"id\" : \"title\",\n    \"value\" : \"PhoenixCo Employees\"\n  }, {\n    \"id\" : \"title\",\n    \"value\" : \"PhoenixCo Employees\"\n  } ],\n  \"links\" : [ {\n    \"method\" : \"GET\",\n    \"id\" : \"home\",\n    \"href\" : \"http://api.example.org/\",\n    \"title\" : \"Home Page\",\n    \"properties\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ]\n  }, {\n    \"method\" : \"GET\",\n    \"id\" : \"home\",\n    \"href\" : \"http://api.example.org/\",\n    \"title\" : \"Home Page\",\n    \"properties\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ]\n  } ],\n  \"items\" : [ {\n    \"employeeIdentifier\" : 123,\n    \"contract\" : {\n      \"date-started\" : \"01/01/2020\",\n      \"contractIdentifier\" : 123,\n      \"date-closed\" : \"01/01/2020\",\n      \"type-code\" : 1,\n      \"handle-code\" : \"PP-01\"\n    },\n    \"given-name\" : \"Joe\",\n    \"position\" : {\n      \"positionIdentifier\" : 123,\n      \"date-started\" : \"01/01/2020\",\n      \"name\" : \"full time\",\n      \"date-closed\" : \"01/01/2020\",\n      \"handle-code\" : \"PP-01\"\n    },\n    \"family-name\" : \"Doe\",\n    \"email\" : \"joe.doe@example.org\",\n    \"person-code\" : \"OSC001\"\n  }, {\n    \"employeeIdentifier\" : 123,\n    \"contract\" : {\n      \"date-started\" : \"01/01/2020\",\n      \"contractIdentifier\" : 123,\n      \"date-closed\" : \"01/01/2020\",\n      \"type-code\" : 1,\n      \"handle-code\" : \"PP-01\"\n    },\n    \"given-name\" : \"Joe\",\n    \"position\" : {\n      \"positionIdentifier\" : 123,\n      \"date-started\" : \"01/01/2020\",\n      \"name\" : \"full time\",\n      \"date-closed\" : \"01/01/2020\",\n      \"handle-code\" : \"PP-01\"\n    },\n    \"family-name\" : \"Doe\",\n    \"email\" : \"joe.doe@example.org\",\n    \"person-code\" : \"OSC001\"\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Reply>(exampleJson)
                        : default(Reply);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Use this to return a single employee record
        /// </summary>
        /// <param name="identifier">record identifier</param>
        /// <param name="session">session token</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/MzdyHrave/Phoenix/1.0.0/employee/{identifier}")]
        [ValidateModelState]
        [SwaggerOperation("EmployeeItem")]
        [SwaggerResponse(statusCode: 200, type: typeof(Reply), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult EmployeeItem([FromRoute][Required]decimal? identifier, [FromQuery]string session)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Reply));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"metadata\" : [ {\n    \"id\" : \"title\",\n    \"value\" : \"PhoenixCo Employees\"\n  }, {\n    \"id\" : \"title\",\n    \"value\" : \"PhoenixCo Employees\"\n  } ],\n  \"links\" : [ {\n    \"method\" : \"GET\",\n    \"id\" : \"home\",\n    \"href\" : \"http://api.example.org/\",\n    \"title\" : \"Home Page\",\n    \"properties\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ]\n  }, {\n    \"method\" : \"GET\",\n    \"id\" : \"home\",\n    \"href\" : \"http://api.example.org/\",\n    \"title\" : \"Home Page\",\n    \"properties\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ]\n  } ],\n  \"items\" : [ {\n    \"employeeIdentifier\" : 123,\n    \"contract\" : {\n      \"date-started\" : \"01/01/2020\",\n      \"contractIdentifier\" : 123,\n      \"date-closed\" : \"01/01/2020\",\n      \"type-code\" : 1,\n      \"handle-code\" : \"PP-01\"\n    },\n    \"given-name\" : \"Joe\",\n    \"position\" : {\n      \"positionIdentifier\" : 123,\n      \"date-started\" : \"01/01/2020\",\n      \"name\" : \"full time\",\n      \"date-closed\" : \"01/01/2020\",\n      \"handle-code\" : \"PP-01\"\n    },\n    \"family-name\" : \"Doe\",\n    \"email\" : \"joe.doe@example.org\",\n    \"person-code\" : \"OSC001\"\n  }, {\n    \"employeeIdentifier\" : 123,\n    \"contract\" : {\n      \"date-started\" : \"01/01/2020\",\n      \"contractIdentifier\" : 123,\n      \"date-closed\" : \"01/01/2020\",\n      \"type-code\" : 1,\n      \"handle-code\" : \"PP-01\"\n    },\n    \"given-name\" : \"Joe\",\n    \"position\" : {\n      \"positionIdentifier\" : 123,\n      \"date-started\" : \"01/01/2020\",\n      \"name\" : \"full time\",\n      \"date-closed\" : \"01/01/2020\",\n      \"handle-code\" : \"PP-01\"\n    },\n    \"family-name\" : \"Doe\",\n    \"email\" : \"joe.doe@example.org\",\n    \"person-code\" : \"OSC001\"\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Reply>(exampleJson)
                        : default(Reply);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Use this to retrieve the home page for the employees API
        /// </summary>
        /// <param name="session">session token</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/MzdyHrave/Phoenix/1.0.0/")]
        [ValidateModelState]
        [SwaggerOperation("Home")]
        [SwaggerResponse(statusCode: 200, type: typeof(Reply), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult Home([FromQuery]string session)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Reply));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"metadata\" : [ {\n    \"id\" : \"title\",\n    \"value\" : \"PhoenixCo Employees\"\n  }, {\n    \"id\" : \"title\",\n    \"value\" : \"PhoenixCo Employees\"\n  } ],\n  \"links\" : [ {\n    \"method\" : \"GET\",\n    \"id\" : \"home\",\n    \"href\" : \"http://api.example.org/\",\n    \"title\" : \"Home Page\",\n    \"properties\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ]\n  }, {\n    \"method\" : \"GET\",\n    \"id\" : \"home\",\n    \"href\" : \"http://api.example.org/\",\n    \"title\" : \"Home Page\",\n    \"properties\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ]\n  } ],\n  \"items\" : [ {\n    \"employeeIdentifier\" : 123,\n    \"contract\" : {\n      \"date-started\" : \"01/01/2020\",\n      \"contractIdentifier\" : 123,\n      \"date-closed\" : \"01/01/2020\",\n      \"type-code\" : 1,\n      \"handle-code\" : \"PP-01\"\n    },\n    \"given-name\" : \"Joe\",\n    \"position\" : {\n      \"positionIdentifier\" : 123,\n      \"date-started\" : \"01/01/2020\",\n      \"name\" : \"full time\",\n      \"date-closed\" : \"01/01/2020\",\n      \"handle-code\" : \"PP-01\"\n    },\n    \"family-name\" : \"Doe\",\n    \"email\" : \"joe.doe@example.org\",\n    \"person-code\" : \"OSC001\"\n  }, {\n    \"employeeIdentifier\" : 123,\n    \"contract\" : {\n      \"date-started\" : \"01/01/2020\",\n      \"contractIdentifier\" : 123,\n      \"date-closed\" : \"01/01/2020\",\n      \"type-code\" : 1,\n      \"handle-code\" : \"PP-01\"\n    },\n    \"given-name\" : \"Joe\",\n    \"position\" : {\n      \"positionIdentifier\" : 123,\n      \"date-started\" : \"01/01/2020\",\n      \"name\" : \"full time\",\n      \"date-closed\" : \"01/01/2020\",\n      \"handle-code\" : \"PP-01\"\n    },\n    \"family-name\" : \"Doe\",\n    \"email\" : \"joe.doe@example.org\",\n    \"person-code\" : \"OSC001\"\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Reply>(exampleJson)
                        : default(Reply);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Use this to start process of onboarding a employee
        /// </summary>
        /// <param name="body"></param>
        /// <param name="ifNoneMatch">Conditional Create Header</param>
        /// <response code="201">Created</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/MzdyHrave/Phoenix/1.0.0/start")]
        [ValidateModelState]
        [SwaggerOperation("StartOnboarding")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult StartOnboarding([FromBody]Start body, [FromHeader]string ifNoneMatch)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }
    }
}
